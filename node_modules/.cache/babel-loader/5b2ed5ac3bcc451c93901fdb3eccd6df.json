{"ast":null,"code":"var _jsxFileName = \"/home/sagarp/Backup/prj/covid/src/App.js\";\nimport React from \"react\";\nimport { VectorMap } from \"react-jvectormap\";\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport { Container, Row, Col } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      map: [{\n        code: 'IN-BR',\n        value: 566\n      }, {\n        code: 'IN-PY',\n        value: 800\n      }, {\n        code: 'IN-DD',\n        value: 900\n      }, {\n        code: 'IN-DL',\n        value: 500\n      }, {\n        code: 'IN-NL',\n        value: 1000\n      }, {\n        code: 'IN-HP',\n        value: 10000\n      }, {\n        code: 'IN-HR',\n        value: 800\n      }, {\n        code: 'IN-WB',\n        value: 900\n      }, {\n        code: 'IN-HP',\n        value: 10000\n      }, {\n        code: 'IN-HR',\n        value: 800\n      }, {\n        code: 'IN-AS',\n        value: 1000\n      }, {\n        code: 'IN-UT',\n        value: 14000\n      }, {\n        code: 'IN-UP',\n        value: 300\n      }, {\n        code: 'IN-JK',\n        value: 200\n      }, {\n        code: 'IN-NR',\n        value: 500\n      }, {\n        code: 'IN-JH',\n        value: 500\n      }, {\n        code: 'IN-SK',\n        value: 500\n      }, {\n        code: 'IN-MZ',\n        value: 10000\n      }, {\n        code: 'IN-CT',\n        value: 800\n      }, {\n        code: 'IN-CH',\n        value: 900\n      }, {\n        code: 'IN-GA',\n        value: 500\n      }, {\n        code: 'IN-GJ',\n        value: 1000\n      }, {\n        code: 'IN-RJ',\n        value: 14000\n      }, {\n        code: 'IN-MP',\n        value: 300\n      }, {\n        code: 'IN-OR',\n        value: 200\n      }, {\n        code: 'IN-TN',\n        value: 10000\n      }, {\n        code: 'IN-AN',\n        value: 800\n      }, {\n        code: 'IN-AP',\n        value: 900\n      }, {\n        code: 'IN-AR',\n        value: 500\n      }, {\n        code: 'IN-KA',\n        value: 1000\n      }, {\n        code: 'IN-PB',\n        value: 14000\n      }, {\n        code: 'IN-ML',\n        value: 300\n      }, {\n        code: 'IN-MN',\n        value: 200\n      }, {\n        code: 'IN-MH',\n        value: 300\n      }, {\n        code: 'IN-KL',\n        value: 200\n      }],\n      indiaState: []\n    };\n\n    this.handleClick = (event, code) => {\n      //var res = code.replace(\"IN-\", \"\");\n      var data = {\n        confirmed: this.getdata(code).confirmed,\n        active: this.getdata(code).active,\n        death: this.getdata(code).deaths\n      };\n      return data;\n    };\n\n    this.handleshow2 = (e, el, code) => {\n      console.log(\"********************\", code);\n      var res = code.replace(\"IN-\", \"\");\n      el.html(el.html() + `<br>\n        <br> Confirmed cases: ${this.getdata(res).confirmed}<br>\n        <br> Active cases: ${this.getdata(res).active}<br>\n        <br> Deaths cases: ${this.getdata(res).deaths}<br>`);\n    };\n  }\n\n  getdata(key) {\n    var countryData = [];\n    this.state.indiaState.forEach(function (obj) {\n      countryData[obj.statecode] = obj;\n    });\n    return countryData[key];\n  }\n\n  getalldata() {\n    var countryData = [];\n    this.state.indiaState.forEach(function (obj) {\n      countryData[`IN-${obj.statecode}`] = parseInt(obj.active);\n    });\n    console.log(\"***countryData*\", countryData);\n    return countryData;\n  }\n\n  changeBg() {\n    this.refs.map.setBackgroundColor('red');\n  }\n\n  componentDidMount() {\n    // const requestURL = 'api/ListOfChild'\n    // const listofchild = call(get, { url: requestURL});\n    axios.get('https://api.covid19india.org/data.json').then(response => {\n      console.log(\"response****\", response);\n      toast.info(\"success\");\n      this.setState({\n        indiaState: response.data.statewise\n      });\n      console.log(\"****\", this.state.indiaState);\n    }).catch(err => {\n      toast.error(\"Internal Server Error\");\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100%',\n        width: '100%',\n        position: 'fixed'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"India covid update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card\",\n              style: {\n                width: \"18rem\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body\",\n                children: handleClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(VectorMap, {\n              map: 'ca_lcc',\n              map: \"in_mill\",\n              backgroundColor: \"white\",\n              focusOn: {\n                x: 0.5,\n                y: 0.5,\n                scale: 0,\n                animate: false\n              },\n              zoomOnScroll: true,\n              containerStyle: {\n                width: \"100%\",\n                height: \"700px\"\n              },\n              onRegionClick: handleClick //gets the country code\n              ,\n              onRegionTipShow: this.handleshow2,\n              containerClassName: \"map\",\n              regionStyle: {\n                initial: {\n                  fill: \"#e4e4e4\",\n                  \"fill-opacity\": 0.9,\n                  stroke: \"none\",\n                  \"stroke-width\": 0,\n                  \"stroke-opacity\": 0\n                },\n                hover: {\n                  \"fill-opacity\": 0.8,\n                  cursor: \"pointer\",\n                  fill: 'blue'\n                },\n                selected: {\n                  fill: 'white'\n                }\n              },\n              regionsSelectable: false,\n              series: {\n                regions: [{\n                  values: this.getalldata(),\n                  //can be directly served //with api response or any data\n                  scale: ['#F8E4E2', '#FC3409'],\n                  //color range\n                  normalizeFunction: \"polynomial\"\n                }]\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sagarp/Backup/prj/covid/src/App.js"],"names":["React","VectorMap","axios","toast","ToastContainer","Container","Row","Col","App","Component","state","map","code","value","indiaState","handleClick","event","data","confirmed","getdata","active","death","deaths","handleshow2","e","el","console","log","res","replace","html","key","countryData","forEach","obj","statecode","getalldata","parseInt","changeBg","refs","setBackgroundColor","componentDidMount","get","then","response","info","setState","statewise","catch","err","error","render","height","width","position","textAlign","x","y","scale","animate","initial","fill","stroke","hover","cursor","selected","regions","values","normalizeFunction"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport { VectorMap } from \"react-jvectormap\";\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport { Container, Row, Col } from 'reactstrap';\n\n\nclass App extends React.Component {\n\n  state = {\n    map: [\n      { code: 'IN-BR', value: 566 },\n      { code: 'IN-PY', value: 800 },\n      { code: 'IN-DD', value: 900 },\n      { code: 'IN-DL', value: 500 },\n      { code: 'IN-NL', value: 1000 },\n      { code: 'IN-HP', value: 10000 },\n      { code: 'IN-HR', value: 800 },\n      { code: 'IN-WB', value: 900 },\n\n      { code: 'IN-HP', value: 10000 },\n      { code: 'IN-HR', value: 800 },\n      { code: 'IN-AS', value: 1000 },\n      { code: 'IN-UT', value: 14000 },\n      { code: 'IN-UP', value: 300 },\n      { code: 'IN-JK', value: 200 },\n      { code: 'IN-NR', value: 500 },\n      { code: 'IN-JH', value: 500 },\n      { code: 'IN-SK', value: 500 },\n\n      { code: 'IN-MZ', value: 10000 },\n      { code: 'IN-CT', value: 800 },\n      { code: 'IN-CH', value: 900 },\n      { code: 'IN-GA', value: 500 },\n      { code: 'IN-GJ', value: 1000 },\n      { code: 'IN-RJ', value: 14000 },\n      { code: 'IN-MP', value: 300 },\n      { code: 'IN-OR', value: 200 },\n      { code: 'IN-TN', value: 10000 },\n      { code: 'IN-AN', value: 800 },\n      { code: 'IN-AP', value: 900 },\n      { code: 'IN-AR', value: 500 },\n      { code: 'IN-KA', value: 1000 },\n      { code: 'IN-PB', value: 14000 },\n      { code: 'IN-ML', value: 300 },\n      { code: 'IN-MN', value: 200 },\n      { code: 'IN-MH', value: 300 },\n      { code: 'IN-KL', value: 200 },\n    ],\n    indiaState: [],\n  }\n   handleClick = (event, code) => {\n    //var res = code.replace(\"IN-\", \"\");\n    var data={\n      confirmed : this.getdata(code).confirmed,\n      active : this.getdata(code).active,\n      death : this.getdata(code).deaths\n    }\n      return data\n    \n  }\n  getdata(key) {\n    var countryData = [];\n    this.state.indiaState.forEach(function (obj) {\n      countryData[obj.statecode] = obj;\n    });\n    return countryData[key];\n  }\n\n  getalldata() {\n    var countryData = [];\n    this.state.indiaState.forEach(function (obj) {\n      countryData[`IN-${obj.statecode}`] = parseInt(obj.active);\n    });\n    console.log(\"***countryData*\", countryData)\n\n    return countryData;\n  }\n\n  changeBg() {\n    this.refs.map.setBackgroundColor('red');\n  }\n\n  handleshow2 = (e, el, code) => {\n    console.log(\"********************\", code)\n    var res = code.replace(\"IN-\", \"\");\n\n    el.html(el.html() +\n      `<br>\n        <br> Confirmed cases: ${this.getdata(res).confirmed}<br>\n        <br> Active cases: ${this.getdata(res).active}<br>\n        <br> Deaths cases: ${this.getdata(res).deaths}<br>`\n    );\n  };\n  componentDidMount() {\n    // const requestURL = 'api/ListOfChild'\n    // const listofchild = call(get, { url: requestURL});\n\n    axios.get('https://api.covid19india.org/data.json')\n      .then(response => {\n        console.log(\"response****\", response)\n        toast.info(\"success\")\n        this.setState({ indiaState: response.data.statewise });\n        console.log(\"****\", this.state.indiaState)\n\n      }).catch(err => {\n        toast.error(\"Internal Server Error\")\n      })\n  }\n\n  render() {\n    return (\n      <div style={{ height: '100%', width: '100%', position: 'fixed' }}>\n        <ToastContainer />\n        <h2 style={{ textAlign: 'center'}}>India covid update</h2>\n        <br />\n        <Container>\n          <Row>\n            <Col md={4} >\n\n              <div class=\"card\" style={{width: \"18rem\"}} >\n                <div class=\"card-body\">\n                {handleClick}\n                </div>\n              </div>\n\n\n            </Col>\n            <Col xs={12} md={8}>\n              <VectorMap map={'ca_lcc'}\n                map={\"in_mill\"}\n                backgroundColor=\"white\"\n                focusOn={{\n                  x: 0.5,\n                  y: 0.5,\n                  scale: 0,\n                  animate: false\n                }}\n                zoomOnScroll={true}\n                containerStyle={{\n                  width: \"100%\",\n                  height: \"700px\"\n                }}\n                onRegionClick={handleClick} //gets the country code\n                onRegionTipShow={this.handleshow2}\n                containerClassName=\"map\"\n                regionStyle={{\n                  initial: {\n                    fill: \"#e4e4e4\",\n                    \"fill-opacity\": 0.9,\n                    stroke: \"none\",\n                    \"stroke-width\": 0,\n                    \"stroke-opacity\": 0\n                  },\n                  hover: {\n                    \"fill-opacity\": 0.8,\n                    cursor: \"pointer\",\n                    fill: 'blue'\n                  },\n                  selected: {\n                    fill: 'white'\n                  },\n                }}\n\n                regionsSelectable={false}\n                series={{\n                  regions: [\n                    {\n                      values: this.getalldata(), //can be directly served //with api response or any data\n                      scale: ['#F8E4E2', '#FC3409'], //color range\n                      normalizeFunction: \"polynomial\"\n                    }\n                  ]\n                }}\n              />\n            </Col>\n          </Row>\n\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}