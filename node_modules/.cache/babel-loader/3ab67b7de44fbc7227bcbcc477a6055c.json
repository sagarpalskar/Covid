{"ast":null,"code":"var _jsxFileName = \"/home/sagarp/Backup/prj/covid/src/Map.js\";\nimport React from \"react\";\nimport { VectorMap } from \"react-jvectormap\";\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      map: [{\n        code: 'IN-BR',\n        value: 566\n      }, {\n        code: 'IN-PY',\n        value: 800\n      }, {\n        code: 'IN-DD',\n        value: 900\n      }, {\n        code: 'IN-DL',\n        value: 500\n      }, {\n        code: 'IN-NL',\n        value: 1000\n      }, {\n        code: 'IN-HP',\n        value: 10000\n      }, {\n        code: 'IN-HR',\n        value: 800\n      }, {\n        code: 'IN-WB',\n        value: 900\n      }, {\n        code: 'IN-HP',\n        value: 10000\n      }, {\n        code: 'IN-HR',\n        value: 800\n      }, {\n        code: 'IN-AS',\n        value: 1000\n      }, {\n        code: 'IN-UT',\n        value: 14000\n      }, {\n        code: 'IN-UP',\n        value: 300\n      }, {\n        code: 'IN-JK',\n        value: 200\n      }, {\n        code: 'IN-NR',\n        value: 500\n      }, {\n        code: 'IN-JH',\n        value: 500\n      }, {\n        code: 'IN-SK',\n        value: 500\n      }, {\n        code: 'IN-MZ',\n        value: 10000\n      }, {\n        code: 'IN-CT',\n        value: 800\n      }, {\n        code: 'IN-CH',\n        value: 900\n      }, {\n        code: 'IN-GA',\n        value: 500\n      }, {\n        code: 'IN-GJ',\n        value: 1000\n      }, {\n        code: 'IN-RJ',\n        value: 14000\n      }, {\n        code: 'IN-MP',\n        value: 300\n      }, {\n        code: 'IN-OR',\n        value: 200\n      }, {\n        code: 'IN-TN',\n        value: 10000\n      }, {\n        code: 'IN-AN',\n        value: 800\n      }, {\n        code: 'IN-AP',\n        value: 900\n      }, {\n        code: 'IN-AR',\n        value: 500\n      }, {\n        code: 'IN-KA',\n        value: 1000\n      }, {\n        code: 'IN-PB',\n        value: 14000\n      }, {\n        code: 'IN-ML',\n        value: 300\n      }, {\n        code: 'IN-MN',\n        value: 200\n      }, {\n        code: 'IN-MH',\n        value: 300\n      }, {\n        code: 'IN-KL',\n        value: 200\n      }],\n      indiaState: [],\n      data: [],\n      city: '',\n      count: ''\n    };\n\n    this.handleClick = (event, code) => {\n      var res = code.replace(\"IN-\", \"\");\n      console.log(`You have click ${code}`);\n    };\n\n    this.handleshow2 = (e, el, code) => {\n      var res = code.replace(\"IN-\", \"\");\n      el.html(el.html() + `<br>\n      <br> Confirmed cases: ${this.getdata(res).confirmed}<br>\n      <br> Active cases: ${this.getdata(res).active}<br>\n      <br> Deaths cases: ${this.getdata(res).deaths}<br>`);\n    };\n  }\n\n  getdata(key) {\n    var countryData = [];\n    this.state.indiaState.forEach(function (obj) {\n      countryData[obj.statecode] = obj;\n    });\n    return countryData[key];\n  }\n\n  getalldata() {\n    var countryData = [];\n    this.state.indiaState.forEach(function (obj) {\n      countryData[`IN-${obj.statecode}`] = parseInt(obj.active);\n    });\n    return countryData;\n  }\n\n  changeBg() {\n    this.refs.map.setBackgroundColor('red');\n  }\n\n  async componentDidMount() {\n    await axios.get('https://api.covid19india.org/data.json').then(response => {\n      toast.info(\"success\");\n      this.setState({\n        indiaState: response.data.statewise\n      });\n    }).catch(err => {\n      toast.error(\"Internal Server Error\");\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(VectorMap, {\n      map: 'ca_lcc',\n      map: \"in_mill\",\n      backgroundColor: \"#FEF5E7\",\n      focusOn: {\n        x: 0.5,\n        y: 0.5,\n        scale: 0,\n        animate: false\n      },\n      zoomOnScroll: true,\n      containerStyle: {\n        width: \"100%\",\n        height: \"700px\"\n      },\n      onRegionClick: this.handleClick //gets the country code\n      ,\n      onRegionTipShow: this.handleshow2,\n      containerClassName: \"map\",\n      regionStyle: {\n        initial: {\n          fill: \"#e4e4e4\",\n          \"fill-opacity\": 0.9,\n          stroke: \"none\",\n          \"stroke-width\": 0,\n          \"stroke-opacity\": 0\n        },\n        hover: {\n          \"fill-opacity\": 0.8,\n          cursor: \"pointer\",\n          fill: 'blue'\n        },\n        selected: {\n          fill: 'white'\n        }\n      },\n      regionsSelectable: false,\n      series: {\n        regions: [{\n          values: this.getalldata(),\n          //can be directly served //with api response or any data\n          scale: ['#F8E4E2', '#FC3409'],\n          //color range\n          normalizeFunction: \"polynomial\"\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default map;","map":{"version":3,"sources":["/home/sagarp/Backup/prj/covid/src/Map.js"],"names":["React","VectorMap","axios","toast","ToastContainer","map","Component","state","code","value","indiaState","data","city","count","handleClick","event","res","replace","console","log","handleshow2","e","el","html","getdata","confirmed","active","deaths","key","countryData","forEach","obj","statecode","getalldata","parseInt","changeBg","refs","setBackgroundColor","componentDidMount","get","then","response","info","setState","statewise","catch","err","error","render","x","y","scale","animate","width","height","initial","fill","stroke","hover","cursor","selected","regions","values","normalizeFunction"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { VectorMap } from \"react-jvectormap\";\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\n\nclass map extends React.Component {\n  state = {\n    map: [\n      { code: 'IN-BR', value: 566 },\n      { code: 'IN-PY', value: 800 },\n      { code: 'IN-DD', value: 900 },\n      { code: 'IN-DL', value: 500 },\n      { code: 'IN-NL', value: 1000 },\n      { code: 'IN-HP', value: 10000 },\n      { code: 'IN-HR', value: 800 },\n      { code: 'IN-WB', value: 900 },\n\n      { code: 'IN-HP', value: 10000 },\n      { code: 'IN-HR', value: 800 },\n      { code: 'IN-AS', value: 1000 },\n      { code: 'IN-UT', value: 14000 },\n      { code: 'IN-UP', value: 300 },\n      { code: 'IN-JK', value: 200 },\n      { code: 'IN-NR', value: 500 },\n      { code: 'IN-JH', value: 500 },\n      { code: 'IN-SK', value: 500 },\n\n      { code: 'IN-MZ', value: 10000 },\n      { code: 'IN-CT', value: 800 },\n      { code: 'IN-CH', value: 900 },\n      { code: 'IN-GA', value: 500 },\n      { code: 'IN-GJ', value: 1000 },\n      { code: 'IN-RJ', value: 14000 },\n      { code: 'IN-MP', value: 300 },\n      { code: 'IN-OR', value: 200 },\n      { code: 'IN-TN', value: 10000 },\n      { code: 'IN-AN', value: 800 },\n      { code: 'IN-AP', value: 900 },\n      { code: 'IN-AR', value: 500 },\n      { code: 'IN-KA', value: 1000 },\n      { code: 'IN-PB', value: 14000 },\n      { code: 'IN-ML', value: 300 },\n      { code: 'IN-MN', value: 200 },\n      { code: 'IN-MH', value: 300 },\n      { code: 'IN-KL', value: 200 },\n    ],\n    indiaState: [],\n    data: [],\n    city: '',\n    count: ''\n  }\n\n  handleClick = (event, code) => {\n    var res = code.replace(\"IN-\", \"\");\n    console.log(`You have click ${code}`)\n\n  }\n  getdata(key) {\n    var countryData = [];\n    this.state.indiaState.forEach(function (obj) {\n      countryData[obj.statecode] = obj;\n    });\n    return countryData[key];\n  }\n\n  getalldata() {\n    var countryData = [];\n    this.state.indiaState.forEach(function (obj) {\n      countryData[`IN-${obj.statecode}`] = parseInt(obj.active);\n    });\n\n    return countryData;\n  }\n\n  changeBg() {\n    this.refs.map.setBackgroundColor('red');\n  }\n\n  handleshow2 = (e, el, code) => {\n    var res = code.replace(\"IN-\", \"\");\n    el.html(el.html() +\n      `<br>\n      <br> Confirmed cases: ${this.getdata(res).confirmed}<br>\n      <br> Active cases: ${this.getdata(res).active}<br>\n      <br> Deaths cases: ${this.getdata(res).deaths}<br>`\n    );\n  };\n  async componentDidMount() {\n    await axios.get('https://api.covid19india.org/data.json')\n      .then(response => {\n        toast.info(\"success\")\n        this.setState({ indiaState: response.data.statewise });\n\n      }).catch(err => {\n        toast.error(\"Internal Server Error\")\n      })\n  }\n  render() {\n    return (\n      <VectorMap map={'ca_lcc'}\n        map={\"in_mill\"}\n        backgroundColor=\"#FEF5E7\"\n        focusOn={{\n          x: 0.5,\n          y: 0.5,\n          scale: 0,\n          animate: false\n        }}\n        zoomOnScroll={true}\n        containerStyle={{\n          width: \"100%\",\n          height: \"700px\"\n        }}\n        onRegionClick={this.handleClick} //gets the country code\n        onRegionTipShow={this.handleshow2}\n        containerClassName=\"map\"\n        regionStyle={{\n          initial: {\n            fill: \"#e4e4e4\",\n            \"fill-opacity\": 0.9,\n            stroke: \"none\",\n            \"stroke-width\": 0,\n            \"stroke-opacity\": 0\n          },\n          hover: {\n            \"fill-opacity\": 0.8,\n            cursor: \"pointer\",\n            fill: 'blue'\n          },\n          selected: {\n            fill: 'white'\n          },\n        }}\n\n        regionsSelectable={false}\n        series={{\n          regions: [\n            {\n              values: this.getalldata(), //can be directly served //with api response or any data\n              scale: ['#F8E4E2', '#FC3409'], //color range\n              normalizeFunction: \"polynomial\"\n            }\n          ]\n        }}\n      />\n    )\n  }\n}\nexport default map;\n"]},"metadata":{},"sourceType":"module"}