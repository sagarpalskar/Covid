{"ast":null,"code":"var _jsxFileName = \"/home/sagarp/Backup/prj/covid/src/App.js\";\nimport React from \"react\";\nimport { VectorMap } from \"react-jvectormap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst handleClick = (event, code) => {\n  console.log(`You have click ${code}`);\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      map: [{\n        code: 'IN-RJ',\n        value: 10000\n      }, {\n        code: 'IN-MP',\n        value: 800\n      }, {\n        code: 'IN-DL',\n        value: 900\n      }, {\n        code: 'IN-KL',\n        value: 500\n      }]\n    };\n\n    this.handleshow2 = (e, el, code) => {\n      el.html(el.html() + ` <br> Statics: ${this.getdata(code)}`);\n    };\n  }\n\n  getdata(key) {\n    var countryData = [];\n    this.state.map.forEach(function (obj) {\n      countryData[obj.code] = obj.value;\n    });\n    return countryData[key];\n  }\n\n  getalldata() {\n    var countryData = [];\n    this.state.map.forEach(function (obj) {\n      countryData[obj.code] = obj.value;\n    });\n    return countryData;\n  }\n\n  changeBg() {\n    this.refs.map.setBackgroundColor('red');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100%',\n        width: '100%',\n        paddingBlockStart: '10px',\n        position: 'fixed'\n      },\n      children: /*#__PURE__*/_jsxDEV(VectorMap, {\n        map: 'ca_lcc',\n        map: \"in_mill\" // backgroundColor=\"blue\"\n        ,\n        focusOn: {\n          x: 0.5,\n          y: 0.5,\n          scale: 0,\n          animate: false\n        },\n        zoomOnScroll: true,\n        containerStyle: {\n          width: \"100%\",\n          height: \"700px\"\n        },\n        onRegionClick: handleClick //gets the country                         code\n        ,\n        onRegionTipShow: this.handleshow2,\n        containerClassName: \"map\",\n        regionStyle: {\n          initial: {\n            fill: \"#e4e4e4\",\n            \"fill-opacity\": 0.9,\n            stroke: \"none\",\n            \"stroke-width\": 0,\n            \"stroke-opacity\": 0\n          },\n          hover: {\n            \"fill-opacity\": 0.8,\n            cursor: \"pointer\"\n          },\n          selected: {\n            fill: \"#2938bc\" // onclick colour of state\n\n          }\n        },\n        regionsSelectable: false,\n        series: {\n          regions: [{\n            values: this.getalldata(),\n            //can be directly served //with api response or any data\n            scale: ['#C8EEFF', '#0071A4'],\n            //color range\n            normalizeFunction: \"polynomial\"\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sagarp/Backup/prj/covid/src/App.js"],"names":["React","VectorMap","handleClick","event","code","console","log","App","Component","state","map","value","handleshow2","e","el","html","getdata","key","countryData","forEach","obj","getalldata","changeBg","refs","setBackgroundColor","render","height","width","paddingBlockStart","position","x","y","scale","animate","initial","fill","stroke","hover","cursor","selected","regions","values","normalizeFunction"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport { VectorMap } from \"react-jvectormap\";\n\n\nconst handleClick = (event, code) => {\n    console.log(`You have click ${code}`)\n}\nclass App extends React.Component {\n    \n        state = {   \n            map: [\n                   {code: 'IN-RJ',\n                    value: 10000},\n                    {code: 'IN-MP',\n                    value: 800},\n                    {code: 'IN-DL',\n                    value: 900},\n                    {code: 'IN-KL',\n                    value: 500},\n                ]\n        }\n\n    getdata(key) {\n        var countryData = [];\n       this.state.map.forEach(function(obj){\n        countryData[obj.code] = obj.value;\n        });\n        return countryData[key];\n        }\n\n     getalldata() {\n     var countryData = [];\n     this.state.map.forEach(function(obj){\n     countryData[obj.code] = obj.value;\n     });\n     return countryData;\n    }\n         \n    changeBg() {\n        this.refs.map.setBackgroundColor('red');\n    }\n\n    handleshow2 = (e, el, code) => {\n        el.html(el.html() + ` <br> Statics: ${this.getdata(code)}`);\n      };\n\n\n\n    render() {\n        return (\n            <div style={{height: '100%', width: '100%', paddingBlockStart: '10px', position: 'fixed' }}>\n                <VectorMap map={'ca_lcc'}\n                      map={\"in_mill\"}\n                     // backgroundColor=\"blue\"\n                      focusOn={{\n                        x: 0.5,\n                        y: 0.5,\n                        scale: 0,\n                        animate: false\n                      }}\n                      zoomOnScroll={true}\n                      containerStyle={{\n                      width: \"100%\",\n                      height: \"700px\"\n                      }}\n                      onRegionClick={handleClick} //gets the country                         code\n                      onRegionTipShow={this.handleshow2}\n                      containerClassName=\"map\"\n                      regionStyle={{\n                        initial: {\n                           fill: \"#e4e4e4\",\n                           \"fill-opacity\": 0.9,\n                           stroke: \"none\",\n                           \"stroke-width\": 0,\n                           \"stroke-opacity\": 0\n                        },\n                        hover: {\n                           \"fill-opacity\": 0.8,\n                           cursor: \"pointer\"\n                        },\n                        selected: {\n                           fill: \"#2938bc\" // onclick colour of state\n                        },\n                      }}\n                      regionsSelectable={false}\n                      series={{\n                         regions: [\n                             {\n                              values: this.getalldata(), //can be directly served //with api response or any data\n                              scale: ['#C8EEFF', '#0071A4'], //color range\n                              normalizeFunction: \"polynomial\"\n                             }\n                         ]\n                      }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}