{"ast":null,"code":"var _jsxFileName = \"/home/sagarp/Backup/prj/covid/src/App.js\";\nimport React from \"react\";\nimport { VectorMap } from \"react-jvectormap\";\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport { Container, Row, Col } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  root: {\n    '& ..jvectormap-tip': {\n      //table header root,where title and toolbox relies \n      color: 'black',\n      backgroundColor: 'white'\n    }\n  }\n});\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      map: [{\n        code: 'IN-BR'\n      }, {\n        code: 'IN-PY'\n      }, {\n        code: 'IN-DD'\n      }, {\n        code: 'IN-DL'\n      }, {\n        code: 'IN-NL'\n      }, {\n        code: 'IN-HP'\n      }, {\n        code: 'IN-HR'\n      }, {\n        code: 'IN-WB'\n      }, {\n        code: 'IN-HP'\n      }, {\n        code: 'IN-HR'\n      }, {\n        code: 'IN-AS'\n      }, {\n        code: 'IN-UT'\n      }, {\n        code: 'IN-UP'\n      }, {\n        code: 'IN-JK'\n      }, {\n        code: 'IN-NR'\n      }, {\n        code: 'IN-JH'\n      }, {\n        code: 'IN-SK'\n      }, {\n        code: 'IN-MZ'\n      }, {\n        code: 'IN-CT'\n      }, {\n        code: 'IN-CH'\n      }, {\n        code: 'IN-GA'\n      }, {\n        code: 'IN-GJ'\n      }, {\n        code: 'IN-RJ'\n      }, {\n        code: 'IN-MP'\n      }, {\n        code: 'IN-OR'\n      }, {\n        code: 'IN-TN'\n      }, {\n        code: 'IN-AN'\n      }, {\n        code: 'IN-AP'\n      }, {\n        code: 'IN-AR'\n      }, {\n        code: 'IN-KA'\n      }, {\n        code: 'IN-PB'\n      }, {\n        code: 'IN-ML'\n      }, {\n        code: 'IN-MN'\n      }, {\n        code: 'IN-MH'\n      }, {\n        code: 'IN-KL'\n      }],\n      indiaState: [],\n      confirmed: '',\n      active: '',\n      deaths: '',\n      city: '',\n      data: []\n    };\n\n    this.handleClick = (event, code) => {\n      var res = code.replace(\"IN-\", \"\");\n      var data = this.getdata(res);\n      console.log(\".......\", data);\n      this.setState({\n        data: data.confirmed\n      });\n    };\n\n    this.handleshow2 = (e, el, code) => {\n      console.log(\"********************\", code);\n      var res = code.replace(\"IN-\", \"\");\n      el.html(el.html() + `<br>\n        <br> Confirmed cases: ${this.getdata(res).confirmed}<br>\n        <br> Active cases: ${this.getdata(res).active}<br>\n        <br> Deaths cases: ${this.getdata(res).deaths}<br>`);\n    };\n  }\n\n  getdata(key) {\n    var countryData = [];\n    this.state.indiaState.forEach(function (obj) {\n      countryData[obj.statecode] = obj;\n    });\n    return countryData[key];\n  }\n\n  getalldata() {\n    var countryData = [];\n    this.state.indiaState.forEach(function (obj) {\n      countryData[`IN-${obj.statecode}`] = parseInt(obj.active);\n    });\n    console.log(\"***countryData*\", countryData);\n    return countryData;\n  }\n\n  changeBg() {\n    this.refs.map.setBackgroundColor('red');\n  }\n\n  componentDidMount() {\n    // const requestURL = 'api/ListOfChild'\n    // const listofchild = call(get, { url: requestURL});\n    axios.get('https://api.covid19india.org/data.json').then(response => {\n      console.log(\"response****\", response);\n      toast.info(\"success\");\n      this.setState({\n        indiaState: response.data.statewise\n      });\n      console.log(\"****\", this.state.indiaState);\n    }).catch(err => {\n      toast.error(\"Internal Server Error\");\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100%',\n        width: '100%',\n        position: 'fixed'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"India covid update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card\",\n              style: {\n                width: \"18rem\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body\",\n                children: [\"City : \", this.state.city, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 43\n                }, this), \"Confirmed Cases: \", this.state.confirmed, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 56\n                }, this), \"Active Cases: \", this.state.active, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 50\n                }, this), \"Deaths Cases: \", this.state.deaths, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 50\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(VectorMap, {\n              map: 'ca_lcc',\n              map: \"in_mill\",\n              backgroundColor: \"white\",\n              focusOn: {\n                x: 0.5,\n                y: 0.5,\n                scale: 0,\n                animate: false\n              },\n              zoomOnScroll: true,\n              containerStyle: {\n                width: \"100%\",\n                height: \"700px\"\n              },\n              onRegionClick: this.handleClick //gets the country code\n              ,\n              onRegionTipShow: this.handleshow2,\n              containerClassName: \"map\",\n              regionStyle: {\n                initial: {\n                  fill: \"#e4e4e4\",\n                  \"fill-opacity\": 0.9,\n                  stroke: \"none\",\n                  \"stroke-width\": 0,\n                  \"stroke-opacity\": 0\n                },\n                hover: {\n                  \"fill-opacity\": 0.8,\n                  cursor: \"pointer\",\n                  fill: 'blue'\n                },\n                selected: {\n                  fill: 'white'\n                }\n              },\n              regionsSelectable: false,\n              series: {\n                regions: [{\n                  values: this.getalldata(),\n                  //can be directly served //with api response or any data\n                  scale: ['#F8E4E2', '#FC3409'],\n                  //color range\n                  normalizeFunction: \"polynomial\"\n                }]\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sagarp/Backup/prj/covid/src/App.js"],"names":["React","VectorMap","axios","toast","ToastContainer","Container","Row","Col","styles","theme","root","color","backgroundColor","App","Component","state","map","code","indiaState","confirmed","active","deaths","city","data","handleClick","event","res","replace","getdata","console","log","setState","handleshow2","e","el","html","key","countryData","forEach","obj","statecode","getalldata","parseInt","changeBg","refs","setBackgroundColor","componentDidMount","get","then","response","info","statewise","catch","err","error","render","classes","props","height","width","position","textAlign","x","y","scale","animate","initial","fill","stroke","hover","cursor","selected","regions","values","normalizeFunction"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport { VectorMap } from \"react-jvectormap\";\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport { Container, Row, Col } from 'reactstrap';\n\n\n      const styles = theme => ({\n        root: {\n          '& ..jvectormap-tip': {//table header root,where title and toolbox relies \n            color: 'black',\n            backgroundColor: 'white',\n         \n          },}})\n      \nclass App extends React.Component {\n\n  state = {\n    map: [\n      { code: 'IN-BR' },\n      { code: 'IN-PY' },\n      { code: 'IN-DD' },\n      { code: 'IN-DL' },\n      { code: 'IN-NL' },\n      { code: 'IN-HP' },\n      { code: 'IN-HR' },\n      { code: 'IN-WB' },\n\n      { code: 'IN-HP' },\n      { code: 'IN-HR' },\n      { code: 'IN-AS' },\n      { code: 'IN-UT' },\n      { code: 'IN-UP' },\n      { code: 'IN-JK' },\n      { code: 'IN-NR' },\n      { code: 'IN-JH' },\n      { code: 'IN-SK' },\n\n      { code: 'IN-MZ' },\n      { code: 'IN-CT' },\n      { code: 'IN-CH' },\n      { code: 'IN-GA' },\n      { code: 'IN-GJ' },\n      { code: 'IN-RJ' },\n      { code: 'IN-MP' },\n      { code: 'IN-OR' },\n      { code: 'IN-TN' },\n      { code: 'IN-AN' },\n      { code: 'IN-AP' },\n      { code: 'IN-AR' },\n      { code: 'IN-KA' },\n      { code: 'IN-PB' },\n      { code: 'IN-ML' },\n      { code: 'IN-MN' },\n      { code: 'IN-MH' },\n      { code: 'IN-KL' },\n    ],\n    indiaState: [],\n    confirmed:'',\n    active : '',\n    deaths :'',\n    city :'',\n    data:[]\n\n  }\n   handleClick = (event, code) => {\n    var res = code.replace(\"IN-\", \"\");  \n    var data =this.getdata(res);\n    console.log(\".......\",data)\n       this.setState({data:data.confirmed})\n   \n        \n  }\n  getdata(key) {\n    var countryData = [];\n    this.state.indiaState.forEach(function (obj) {\n      countryData[obj.statecode] = obj;\n    });\n    return countryData[key];\n  }\n\n  getalldata() {\n    var countryData = [];\n    this.state.indiaState.forEach(function (obj) {\n      countryData[`IN-${obj.statecode}`] = parseInt(obj.active);\n    });\n    console.log(\"***countryData*\", countryData)\n\n    return countryData;\n  }\n\n  changeBg() {\n    this.refs.map.setBackgroundColor('red');\n  }\n\n  handleshow2 = (e, el, code) => {\n    console.log(\"********************\", code)\n    var res = code.replace(\"IN-\", \"\");\n\n    el.html(el.html() +\n      `<br>\n        <br> Confirmed cases: ${this.getdata(res).confirmed}<br>\n        <br> Active cases: ${this.getdata(res).active}<br>\n        <br> Deaths cases: ${this.getdata(res).deaths}<br>`\n    );\n  };\n  componentDidMount() {\n    // const requestURL = 'api/ListOfChild'\n    // const listofchild = call(get, { url: requestURL});\n\n    axios.get('https://api.covid19india.org/data.json')\n      .then(response => {\n        console.log(\"response****\", response)\n        toast.info(\"success\")\n        this.setState({ indiaState: response.data.statewise });\n        console.log(\"****\", this.state.indiaState)\n\n      }).catch(err => {\n        toast.error(\"Internal Server Error\")\n      })\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div style={{ height: '100%', width: '100%', position: 'fixed' }}>\n        <ToastContainer />\n        <h2 style={{ textAlign: 'center'}}>India covid update</h2>\n        <br />\n        <Container>\n          <Row>\n            <Col >\n\n              <div class=\"card\" style={{width: \"18rem\"}} >\n                <div class=\"card-body\">\n                  City : {this.state.city}<br />\n                Confirmed Cases: {this.state.confirmed}<br />\n                Active Cases: {this.state.active}<br />\n                Deaths Cases: {this.state.deaths}<br />\n\n                </div>\n              </div>\n\n\n            </Col>\n            <Col xs={12} md={8}>\n            \n              <VectorMap map={'ca_lcc'}\n                map={\"in_mill\"}\n                backgroundColor=\"white\"\n                focusOn={{\n                  x: 0.5,\n                  y: 0.5,\n                  scale: 0,\n                  animate: false\n                }}\n                zoomOnScroll={true}\n                containerStyle={{\n                  width: \"100%\",\n                  height: \"700px\"\n                }}\n                onRegionClick={this.handleClick} //gets the country code\n                onRegionTipShow={this.handleshow2}\n                containerClassName=\"map\"\n                regionStyle={{\n                  initial: {\n                    fill: \"#e4e4e4\",\n                    \"fill-opacity\": 0.9,\n                    stroke: \"none\",\n                    \"stroke-width\": 0,\n                    \"stroke-opacity\": 0\n                  },\n                  hover: {\n                    \"fill-opacity\": 0.8,\n                    cursor: \"pointer\",\n                    fill: 'blue'\n                  },\n                  selected: {\n                    fill: 'white'\n                  },\n                }}\n\n                regionsSelectable={false}\n                series={{\n                  regions: [\n                    {\n                      values: this.getalldata(), //can be directly served //with api response or any data\n                      scale: ['#F8E4E2', '#FC3409'], //color range\n                      normalizeFunction: \"polynomial\"\n                    }\n                  ]\n                }}\n              />\n            </Col>\n          \n          </Row>\n\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}