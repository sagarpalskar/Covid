{"version":3,"sources":["Detailed.js","TotalCase.js","Map.js","App.js","reportWebVitals.js","index.js"],"names":["detailed","props","handleChange","event","setState","cityName","target","value","districtData","Object","entries","getdata","handleChange1","detailedInfo","districtName","state","forEach","obj","confirmeCase","confirmed","activeCase","active","recoveredCase","recovered","deathCase","deceased","countryData","key","this","a","axios","get","then","response","data","catch","err","toast","error","style","fontSize","Paper","elevation","padding","borderRadius","width","Typography","Select","height","labelId","id","onChange","variant","IconComponent","className","map","i","MenuItem","age","color","React","Component","TotalCase","total","date","totalConfirmeCase","totalActiveCase","totalRecoveredCase","totalDeathCase","statewise","deaths","lastupdatedtime","code","indiaState","city","count","handleClick","console","log","handleshow2","e","el","res","replace","html","statecode","parseInt","refs","setBackgroundColor","x","y","scale","animate","initial","fill","stroke","hover","cursor","selected","regions","values","getalldata","normalizeFunction","App","speed","contentClassName","horizontal","position","backgroundColor","textAlign","Grid","container","direction","justify","alignItems","spacing","item","xs","Map","to","exact","path","Detailed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d66b1f1.chunk.js","sourcesContent":["import React from \"react\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nclass detailed extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            districtName: '',\n            cityName: '',\n            countryData: [],\n            districtData: [],\n            confirmeCase: '',\n            activeCase: '',\n            recoveredCase: '',\n            deathCase: ''\n\n        }\n    }\n    handleChange = (event) => {\n        this.setState({ cityName: event.target.value });\n        this.setState({ districtData: Object.entries(this.getdata(event.target.value)) });\n    };\n    getdata(key) {\n        var countryData = [];\n        this.state.countryData.forEach(function (obj) {\n            if (key == obj[0]) {\n                countryData = obj[1].districtData;\n                return countryData;\n            }\n        });\n        return countryData;\n    }\n    handleChange1 = (event) => {\n        var detailedInfo = [];\n        this.setState({ districtName: event.target.value });\n        this.state.districtData.forEach(function (obj) {\n            if (event.target.value == obj[0]) {\n                detailedInfo = obj[1];\n                return detailedInfo;\n            }\n        });\n        this.setState({ confirmeCase: detailedInfo.confirmed });\n        this.setState({ activeCase: detailedInfo.active });\n        this.setState({ recoveredCase: detailedInfo.recovered });\n        this.setState({ deathCase: detailedInfo.deceased });\n        return detailedInfo;\n    };\n\n    async componentDidMount() {\n        await axios.get('https://api.covid19india.org/state_district_wise.json')\n            .then(response => {\n                var data = Object.entries(response.data)\n                this.setState({ countryData: data }, () => {\n                });\n\n            }).catch(err => {\n                toast.error(\"Internal Server Error\")\n            })\n    }\n\n    render() {\n        return (\n            <div style={{ fontSize: \"1.3vw\" }}>\n                      <ToastContainer />\n                <Paper elevation={9} style={{ padding: '1vw', borderRadius: '1vw', width: '60%',/* background: 'linear-gradient(to bottom left,#FC3409 10% ,#F8E4E2 80%)'*/ }} >\n\n                    {/* <InputLabel id=\"demo-simple-select-outlined\"style={{fontSize:\"1vw\"}}>State Name  </InputLabel><br />*/}\n                    <Typography style={{ fontSize: \"1.2vw\" }}> State Name </Typography>\n\n                    <Select style={{ width: \"20vw\", borderRadius: '20vw', height: '4vw', }}\n                        labelId=\"demo-simple-select-outlined-label\"\n                        id=\"demo-simple-select-outlined\"\n                        value={this.state.cityName}\n                        onChange={this.handleChange}\n                        //  label=\"City Name\"\n                        variant=\"outlined\"\n                        IconComponent={props => (\n                            <i {...props} className={`material-icons ${props.className}`}>\n                             <ArrowDropDownIcon style={{ fontSize: \"2vw\" }}/>    </i>\n                          )} \n                    >\n                        {\n                            this.state.countryData.map((data, i) => (\n                                <MenuItem value={data[0]}>\n                                    <div style={{ fontSize: \"1.3vw\" }}>\n                                        {data[0]}\n                                    </div>\n                                </MenuItem>\n                            ))}\n                        <MenuItem value=\"\">\n                            <div style={{ fontSize: \"1.3vw\" }}> None  </div>\n                        </MenuItem>\n\n                    </Select><br />\n\n                    <Typography style={{ fontSize: \"1.2vw\" }}> District Name  </Typography>\n\n                    {/* <InputLabel id=\"demo-simple-select-outlined\" style={{fontSize:\"1vw\"}}>District Name  </InputLabel><br />*/}\n                    <Select style={{ width: '20vw', borderRadius: '20vw', height: '4vw', }}\n                        labelId=\"demo-simple-select-outlined\"\n                        id=\"demo-simple-select-outlined\"\n                        value={this.state.age}\n                        onChange={this.handleChange1}\n                        //    label=\"District Name\"\n                        variant=\"outlined\"\n                          IconComponent={props => (\n                            <i {...props} className={`material-icons ${props.className}`}>\n                             <ArrowDropDownIcon style={{ fontSize: \"2vw\" }}/>    </i>\n                          )} \n                    >\n                        {\n                            this.state.districtData.map((data, i) => (\n                                <MenuItem value={data[0]}>\n                                    <div style={{ fontSize: \"1.3vw\" }}>\n                                        {data[0]}\n                                    </div>\n                                </MenuItem>\n                            ))}\n                        <MenuItem value=\"\">\n                            <div style={{ fontSize: \"1.3vw\" }}> None </div>\n                        </MenuItem>\n\n                    </Select>\n\n                    <Typography style={{ /*color: 'yellow' */fontSize: \"1.3vw\" }}> Confirme Cases: {this.state.confirmeCase}</Typography>\n                    <Typography style={{ /*color: 'orange'*/fontSize: \"1.3vw\" }}>  Active Case: {this.state.activeCase}</Typography>\n                    <Typography style={{ color: 'green', fontSize: \"1.3vw\" }}>Recovered Case: {this.state.recoveredCase}</Typography>\n                    <Typography style={{ color: 'red', fontSize: \"1.3vw\" }}>Death Case: {this.state.deathCase}</Typography>\n                </Paper>\n            </div>\n        )\n    }\n}\nexport default detailed;\n","import React from \"react\";\nimport { toast, ToastContainer } from 'react-toastify';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nclass TotalCase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            total: '',\n            date: '',\n            totalConfirmeCase: '',\n            totalActiveCase: '',\n            totalRecoveredCase: '',\n            totalDeathCase: ''\n\n        }\n    }\n\n    async componentDidMount() {\n        await axios.get('https://api.covid19india.org/data.json')\n            .then(response => {\n             //   toast.info(\"success\")\n                this.setState({ total: response.data.statewise[0] });\n\n            }).catch(err => {\n                toast.error(\"Internal Server Error\")\n            })\n\n        this.setState({ totalConfirmeCase: this.state.total.confirmed });\n        this.setState({ totalActiveCase: this.state.total.active });\n        this.setState({ totalRecoveredCase: this.state.total.recovered });\n        this.setState({ totalDeathCase: this.state.total.deaths });\n        this.setState({ date: this.state.total.lastupdatedtime });\n\n    }\n\n    render() {\n        return (\n            <div>\n                <ToastContainer />\n                <Paper elevation={9} style={{ padding: '1vw', borderRadius: '1vw', width: '60%',/* background: 'linear-gradient(to bottom left,#FC3409 10% ,#F8E4E2 80%)'*/ }} >\n\n                    <Typography style={{ color: 'orange'/*'#85929E'*/,fontSize:\"1.3vw\" }}> Record Date {this.state.date}</Typography>\n                    <Typography style={{fontSize:\"1.2vw\"}}>  Total Confirm Cases:- {this.state.totalConfirmeCase}</Typography>\n                    <Typography style={{/* color: 'orange'*/ fontSize:\"1.2vw\"}}> Total Active Case:-   {this.state.totalActiveCase}</Typography>\n                    <Typography style={{ color: 'green',fontSize:\"1.2vw\" }}>Total Recovered Case:-  {this.state.totalRecoveredCase}</Typography>\n                    <Typography style={{ color: 'red',fontSize:\"1.2vw\" }}>Total Death Case:-        {this.state.totalDeathCase}</Typography>\n\n                </Paper>\n            </div>\n        )\n    }\n}\nexport default TotalCase;\n","import React from \"react\";\nimport { VectorMap } from \"react-jvectormap\";\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\n\nclass map extends React.Component {\n  state = {\n    map: [\n      { code: 'IN-BR', value: 566 },\n      { code: 'IN-PY', value: 800 },\n      { code: 'IN-DD', value: 900 },\n      { code: 'IN-DL', value: 500 },\n      { code: 'IN-NL', value: 1000 },\n      { code: 'IN-HP', value: 10000 },\n      { code: 'IN-HR', value: 800 },\n      { code: 'IN-WB', value: 900 },\n\n      { code: 'IN-HP', value: 10000 },\n      { code: 'IN-HR', value: 800 },\n      { code: 'IN-AS', value: 1000 },\n      { code: 'IN-UT', value: 14000 },\n      { code: 'IN-UP', value: 300 },\n      { code: 'IN-JK', value: 200 },\n      { code: 'IN-NR', value: 500 },\n      { code: 'IN-JH', value: 500 },\n      { code: 'IN-SK', value: 500 },\n\n      { code: 'IN-MZ', value: 10000 },\n      { code: 'IN-CT', value: 800 },\n      { code: 'IN-CH', value: 900 },\n      { code: 'IN-GA', value: 500 },\n      { code: 'IN-GJ', value: 1000 },\n      { code: 'IN-RJ', value: 14000 },\n      { code: 'IN-MP', value: 300 },\n      { code: 'IN-OR', value: 200 },\n      { code: 'IN-TN', value: 10000 },\n      { code: 'IN-AN', value: 800 },\n      { code: 'IN-AP', value: 900 },\n      { code: 'IN-AR', value: 500 },\n      { code: 'IN-KA', value: 1000 },\n      { code: 'IN-PB', value: 14000 },\n      { code: 'IN-ML', value: 300 },\n      { code: 'IN-MN', value: 200 },\n      { code: 'IN-MH', value: 300 },\n      { code: 'IN-KL', value: 200 },\n    ],\n    indiaState: [],\n    data: [],\n    city: '',\n    count: ''\n  }\n\n  handleClick = (event, code) => {\n //   var res = code.replace(\"IN-\", \"\");\n    console.log(`You have click ${code}`)\n\n  }\n  getdata(key) {\n    var countryData = [];\n    this.state.indiaState.forEach(function (obj) {\n      countryData[obj.statecode] = obj;\n    });\n    return countryData[key];\n  }\n\n  getalldata() {\n    var countryData = [];\n    this.state.indiaState.forEach(function (obj) {\n      countryData[`IN-${obj.statecode}`] = parseInt(obj.active);\n    });\n\n    return countryData;\n  }\n\n  changeBg() {\n    this.refs.map.setBackgroundColor('red');\n  }\n\n  handleshow2 = (e, el, code) => {\n    var res = code.replace(\"IN-\", \"\");\n    el.html(el.html() +\n      `<br>\n      <br> Confirmed cases: ${this.getdata(res).confirmed}<br>\n      <br> Active cases: ${this.getdata(res).active}<br>\n      <br> Deaths cases: ${this.getdata(res).deaths}<br>`\n    );\n  };\n  async componentDidMount() {\n    await axios.get('https://api.covid19india.org/data.json')\n      .then(response => {\n      //  toast.info(\"success\")\n        this.setState({ indiaState: response.data.statewise });\n\n      }).catch(err => {\n        toast.error(\"Internal Server Error\")\n      })\n  }\n  render() {\n    return (\n      <div>\n      <ToastContainer />\n\n      <VectorMap map={'ca_lcc'}\n        map={\"in_mill\"}\n        backgroundColor=\"#FEF5E7\"\n        focusOn={{\n          x: 0.5,\n          y: 0.5,\n          scale: 0,\n          animate: false\n        }}\n        zoomOnScroll={true}\n        containerStyle={{\n          width: \"100%\",\n          height: \"45vw\"\n        }}\n        onRegionClick={this.handleClick} //gets the country code\n        onRegionTipShow={this.handleshow2}\n        containerClassName=\"map\"\n        regionStyle={{\n          initial: {\n            fill: \"#e4e4e4\",\n            \"fill-opacity\": 0.9,\n            stroke: \"none\",\n            \"stroke-width\": 0,\n            \"stroke-opacity\": 0\n          },\n          hover: {\n            \"fill-opacity\": 0.8,\n            cursor: \"pointer\",\n            fill: 'blue'\n          },\n          selected: {\n            fill: 'white'\n          },\n        }}\n\n        regionsSelectable={false}\n        series={{\n          regions: [\n            {\n              values: this.getalldata(), //can be directly served //with api response or any data\n              scale: ['#F8E4E2', '#FC3409'], //color range\n              normalizeFunction: \"polynomial\"\n            }\n          ]\n        }}\n      />\n      </div>\n    )\n  }\n}\nexport default map;\n","\nimport React from \"react\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport Detailed from './Detailed';\nimport TotalCase from './TotalCase';\nimport Map from './Map';\nimport Grid from '@material-ui/core/Grid';\nimport ScrollArea from'react-scrollbar';\n//import CustomScroll from 'react-custom-scroll';\n//import WorldMap  from './WorldMap';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <ScrollArea\n      speed={0.8}\n      className=\"area\"\n      contentClassName=\"content\"\n      horizontal={false}\n      >\n      <div style={{ height: '100%', width: '100%',/* paddingBlockStart: '15px',*/ position: 'fixed', backgroundColor: \"#FEF5E7\" }}>\n        <h2 style={{ color: '#85929E', textAlign: \"center\", fontSize:\"2vw\" }}>India covid update</h2>\n        <br />\n       \n        <div>\n          <Router>\n            <Grid container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"flex-start\"\n              spacing={5}\n            >\n              <Grid item xs={7}>\n                <Map />\n              </Grid>\n              <Grid item xs>\n                <TotalCase />\n\n                    <Link to=\"/detailed\">\n                    <h4 style={{ color: '#85929E',fontSize:\"1.3vw\" }}>State Wise Detailed Information </h4>\n                    </Link>\n\n                <Switch>\n                  <Route exact path=\"/detailed\"><Detailed /></Route>\n                </Switch>\n              </Grid>\n            </Grid>\n          </Router>\n        { /*< WorldMap/>*/}\n        dcccccccccvcx\n        xv\n        vxxxxxxx\n        </div>\n       \n      </div>\n       </ScrollArea>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}